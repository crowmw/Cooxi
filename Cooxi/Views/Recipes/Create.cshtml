@model Cooxi.Models.Recipe
@{
    ViewBag.Title = "Dodaj przepis";
}

<div class="panel panel-default">
    <div class="panel-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="create-recipe-header">
                <h2><b>DODAJ PRZEPIS</b></h2>
            </div>
            <hr />
            <div id="insta-photos">
                <ul id="insta-photos-list"></ul>
            </div>
            
            <div id="recipe-container" class="form-horizontal hidden">
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, "Tytuł przepisu *", new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @id = "recipe-name-input" } })
                        @Html.ValidationMessageFor(model => model.Name, "Proszę wprowadzić nazwę przepisu", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Ingredients, "Składniki *", new { @class = "control-label col-md-3" })
                    <div id="ingredients-container" class="col-md-9">
                        <div class="input-group adding-ingredient-input-group">
                            <input type="text" id="adding-ingredient-name" placeholder="Nazwa składnika..." class="form-control">
                            <input type="text" id="adding-ingredient-count" placeholder="Ilość" class="form-control">
                            <select id="adding-measure-units-select" class="form-control">
                                <option>gram</option>
                                <option>litrów</option>
                            </select>
                            <a id="add-ingredient">
                                <span class="glyphicon glyphicon-plus"></span>
                            </a>
                        </div>
                        <ol id="ingredients-list"></ol>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, "Sposób przygotowania *", new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.TextAreaFor(model => model.PrepareDescription, new { @class = "form-control", @rows = "5", @id = "prepare-description-textarea" })
                        @Html.ValidationMessageFor(model => model.Name, "Proszę wprowadzić opis przygotowania", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ImagePath, "Zdjęcie potrawy *", new { @class="control-label col-md-3"})
                    <div class="col-md-9">
                        <a href="#" class="thumbnail custom-image">
                            <img src="~/Content/img-placeholder.png" alt="image-placeholder.png" width="200" height="100"/>
                        </a>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model =>model.Note, "Notka", new { @class="control-label col-md-3"})
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ServingFor, "Liczba porcji *", new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.ServingFor, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Difficulty, "Trudność *", new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EnumDropDownListFor(model => model.Difficulty, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Difficulty, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.MealType, "Typ dania *", new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EnumDropDownListFor(model => model.MealType, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MealType, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Dodaj przepis" class="btn btn-success" />
                        <input type="submit" value="Anuluj" class="btn btn-danger" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>
